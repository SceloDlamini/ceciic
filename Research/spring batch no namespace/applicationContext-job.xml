<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans" 
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
		
	<!-- import each job definition xml file here -->
	<!--  <import resource="job-isirLoad.xml"/>  -->
	<import resource="job-emailNotify.xml"/>
	
	<bean id="jobParametersConstructor" class="com.vangent.tap.app.batch.util.JobParametersConstructor">
		<property name="applicationSettings" ref="applicationSettings"/>
		<property name="jobExplorer" ref="jobExplorer"/>
	</bean>
	<bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean" p:dataSource-ref="dataSource" p:tablePrefix="BATCH_" />
	<!-- register each job here -->
	<bean id="jobRegister" class="com.vangent.tap.app.batch.util.JobRegister">
		<property name="jobRegistry" ref="jobRegistry"/>
		<property name="jobs">
			<list>
				<ref bean="emailNotifyJobFactory"/>
				<!--<ref bean="isirLoadJobFactory"/>  -->
			</list>
		</property>
	</bean>
	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
		
	<!-- define each job trigger here -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="emailNotifyCronTrigger"/>
				<!--  <ref bean="isirLoadCronTrigger"/> -->
			</list>
		</property>
	</bean>

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor">
			<bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
		</property>
	</bean>
	
	<!-- register step scope -->
	<bean class="org.springframework.batch.core.scope.StepScope" />
	
	<!-- from simple job  -->
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
		p:databaseType="oracle" p:dataSource-ref="dataSource" p:transactionManager-ref="transactionManager"/>
	
	<bean id="simpleJob" class="org.springframework.batch.core.job.SimpleJob" abstract="true">
		<property name="jobRepository" ref="jobRepository" />
		<property name="restartable" value="true" />
	</bean>

	<bean id="taskletStep" class="org.springframework.batch.core.step.tasklet.TaskletStep" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="allowStartIfComplete" value="false"/>
	</bean>

	<bean id="simpleStep" class="org.springframework.batch.core.step.item.SimpleStepFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="startLimit" value="3" />
		<property name="commitInterval" value="1" />
	</bean>
	
	<bean id="skipLimitStep" class="org.springframework.batch.core.step.item.SkipLimitStepFactoryBean"
		parent="simpleStep" abstract="true">
		<property name="skipLimit" value="0" />
	</bean>
</beans>	
	

